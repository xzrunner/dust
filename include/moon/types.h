#pragma once

#include <bitset>

namespace moon
{

enum Type
{
	INVALID_ID = 0,

	OBJECT_ID,
	MODULE_ID,

	IMAGE_ID,
	SCENE_NODE_ID,

	// Physics
	PHYSICS_WORLD_ID,
	PHYSICS_CONTACT_ID,
	PHYSICS_BODY_ID,
	PHYSICS_FIXTURE_ID,
	PHYSICS_SHAPE_ID,
	PHYSICS_CIRCLE_SHAPE_ID,
	PHYSICS_POLYGON_SHAPE_ID,
	PHYSICS_EDGE_SHAPE_ID,
	PHYSICS_CHAIN_SHAPE_ID,
	PHYSICS_JOINT_ID,
	PHYSICS_MOUSE_JOINT_ID,
	PHYSICS_DISTANCE_JOINT_ID,
	PHYSICS_PRISMATIC_JOINT_ID,
	PHYSICS_REVOLUTE_JOINT_ID,
	PHYSICS_PULLEY_JOINT_ID,
	PHYSICS_GEAR_JOINT_ID,
	PHYSICS_FRICTION_JOINT_ID,
	PHYSICS_WELD_JOINT_ID,
	PHYSICS_ROPE_JOINT_ID,
	PHYSICS_WHEEL_JOINT_ID,
	PHYSICS_MOTOR_JOINT_ID,

	// Modules
	MODULE_FILESYSTEM_ID,
	MODULE_GRAPHICS_ID,
	MODULE_SCENE_GRAPH_ID,

	TYPE_MAX_ENUM
};

typedef std::bitset<TYPE_MAX_ENUM> TypeBits;

extern const TypeBits* TypeFlags;

void AddTypeName(Type type, const char* name);
bool GetTypeName(const char *in, Type &out);
bool GetTypeName(Type in, const char *&out);

}